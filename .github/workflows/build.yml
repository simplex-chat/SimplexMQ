name: build

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:

jobs:
  prepare-release:
    # if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v2

      - name: Create release - latest
        # if: ${{ github.ref == 'refs/heads/master' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          files: |
            LICENSE

      - name: Create release - versioned
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: |
            LICENSE

  build:
    if: always()
    needs: prepare-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            cache_path: ~/.stack
            artifact_rel_path: /bin/dog-food
            asset_name: dog-food-ubuntu-20_04-x86-64
          - os: ubuntu-18.04
            cache_path: ~/.stack
            artifact_rel_path: /bin/dog-food
            asset_name: dog-food-ubuntu-18_04-x86-64
          - os: macos-latest
            cache_path: ~/.stack
            artifact_rel_path: /bin/dog-food
            asset_name: dog-food-macos-x86-64
          - os: windows-latest
            cache_path: C:/sr
            artifact_rel_path: /bin/dog-food.exe
            asset_name: dog-food-windows-x86-64
    steps:
      - name: Clone project
        uses: actions/checkout@v2

      - name: Setup Stack
        uses: haskell/actions/setup@v1
        with:
          ghc-version: '8.8.4'
          enable-stack: true
          stack-version: 'latest'
      
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      
      - name: Echo stuff
        run: |
          echo ${{ env.STACK_ROOT }}
          echo ${{ matrix.cache_path }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ matrix.cache_path }}
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml') }}

      - name: Build & test
        id: build_test
        # TODO reenable tests (stack build --test)
        run: |
          stack build
          echo "::set-output name=LOCAL_INSTALL_ROOT::$(stack path --local-install-root)"
      
      - name: Upload binaries to release - latest
        # if: ${{ github.ref == 'refs/heads/master' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build_test.outputs.LOCAL_INSTALL_ROOT }}${{ matrix.artifact_rel_path }}
          asset_name: ${{ matrix.asset_name }}
          tag: latest

      - name: Upload binaries to release - versioned
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build_test.outputs.LOCAL_INSTALL_ROOT }}${{ matrix.artifact_rel_path }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
