name: build

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:

jobs:
  prepare-release:
    if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TAG: ${{ env.RELEASE_TAG }}
    steps:
      - name: Prepare release meta - latest
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          echo "PRERELEASE=true" >> $GITHUB_ENV

      - name: Prepare release meta - versioned
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "PRERELEASE=false" >> $GITHUB_ENV
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          prerelease: ${{ env.PRERELEASE }}
          files: |
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: prepare-release
    # if: ${{ needs.prepare-release.result == 'success' || github.event_name == 'pull_request' }}
    if: always()
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            stack_cache: ~/.stack
            artifact_rel_path: /bin/dog-food
            asset_name: dog-food-linux-amd64
          - os: macos-latest
            stack_cache: ~/.stack
            artifact_rel_path: /bin/dog-food
            asset_name: dog-food-macos-amd64
          - os: windows-latest
            # TODO fix cache path
            stack_cache: ~/.stack
            artifact_rel_path: \bin\dog-food.exe
            asset_name: dog-food-windows-amd64
    steps:
      - name: Clone project
        uses: actions/checkout@v2

      - name: Setup Stack
        uses: haskell/actions/setup@v1
        with:
          ghc-version: '8.8.4'
          enable-stack: true
          stack-version: 'latest'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ matrix.stack_cache }}
          key: ${{ runner.os }}-${{ hashFiles('stack.yaml') }}

      - name: Build & test
        id: build_test
        # TODO reenable tests (stack build --test)
        run: |
          stack build
          echo "::set-output name=LOCAL_INSTALL_ROOT::$(stack path --local-install-root)"
      
      - name: Upload binaries to release
        if: ${{ needs.prepare-release.result == 'success' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.build_test.outputs.LOCAL_INSTALL_ROOT }}${{ matrix.artifact_rel_path }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ needs.prepare-release.outputs.RELEASE_TAG }}
